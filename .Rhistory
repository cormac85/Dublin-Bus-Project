load("C:/Users/King Mac/Google Drive/Coding/DIT/5. Project/Dublin-Bus-Project/data_import_analysis.RData")
mydb = dbConnect(MySQL(), user='root', password='qwort', host='localhost')
R.Version()
mydb = dbConnect(MySQL(), user='root', password='qwort', host='localhost')
mydb = dbConnect(MySQL(), user='root', password='qwort', host='localhost')
mydb = dbConnect(MySQL(), user='root', password='qwort', host='localhost')
dbListTables(mydb)
#check columns look right
dbGetQuery(mydb, "
select * from information_schema.columns
where table_schema = 'dublinbus'
order by table_name,ordinal_position
")
#Check table exists
dbListTables(mydb)
mydb = dbConnect(MySQL(), user='root', password='qwort', host='localhost',dbname="dublinbus")
dbListTables(mydb)
")
query <- paste("INSERT INTO names VALUES(", paste(data[1,], collapse = ", "), ")")
query
query <- paste("INSERT INTO names VALUES(", paste(data[1,], collapse = ", "), ")")
query <- paste("INSERT INTO names VALUES(", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
query <- paste("INSERT INTO table1 VALUES(", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
query <- paste("INSERT INTO table1 VALUES(", paste(1,train01[1,], collapse = ", "), ")")
query
query <- paste("INSERT INTO table1 VALUES(", paste(1,", ",train01[1,], collapse = ", "), ")")
query
query <- paste("INSERT INTO table1 VALUES(", paste(1,",",train01[1,], collapse = ", "), ")")
query
query <- paste("INSERT INTO table1 VALUES(",1, paste(train01[1,], collapse = ", "), ")")
query
query <- paste("INSERT INTO table1 VALUES(",1", ", paste(train01[1,], collapse = ", "), ")")
query <- paste("INSERT INTO table1 VALUES(",1,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
head(as.date(train01$TimeFrame))
head(as.Date(train01$TimeFrame))
train01$TimeFrame <- as.Date(train01$TimeFrame)
dbGetQuery(mydb,query)
query <- paste("INSERT INTO table1 VALUES(",1,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
train01$TimeFrame <- as.character(train01$TimeFrame) #convert from factor to date
query <- paste("INSERT INTO table1 VALUES(",1,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
dbGetQuery(mydb, "DROP TABLE table1")
dbSendQuery(mydb, "
CREATE TABLE Table1 (
TimestampID INT UNSIGNED NOT NULL AUTO_INCREMENT,
Timestamp BIGINT UNSIGNED,
LineID SMALLINT UNSIGNED,
JourneyPatternID VARCHAR(8),
TimeFrame VARCHAR (10),
VehicleJourneyID INT UNSIGNED,
Congestion BOOL,
LonWGS84 NUMERIC(7,6),
LatWGS84 NUMERIC(7,6),
Delay INT,
BlockID INT UNSIGNED,
VehicleID INT UNSIGNED,
StopID INT UNSIGNED,
AtStop BOOL,
PRIMARY KEY (TimestampID)
);
")
dbListTables(mydb)
query <- paste("INSERT INTO table1 VALUES(",1,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
dbGetQuery(mydb, "DROP TABLE table1")
dbSendQuery(mydb, "
CREATE TABLE Table1 (
TimestampID INT UNSIGNED NOT NULL AUTO_INCREMENT,
Timestamp BIGINT UNSIGNED,
LineID SMALLINT UNSIGNED,
JourneyPatternID VARCHAR(8),
TimeFrame VARCHAR (10),
VehicleJourneyID INT UNSIGNED,
Congestion BOOL,
LonWGS84 NUMERIC(10,8),
LatWGS84 NUMERIC(10,8),
Delay INT,
BlockID INT UNSIGNED,
VehicleID INT UNSIGNED,
StopID INT UNSIGNED,
AtStop BOOL,
PRIMARY KEY (TimestampID)
);
")
query <- paste("INSERT INTO table1 VALUES(",1,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
dbGetQuery(mydb,"SELECT * FROM table1")
View(train01)
dbGetQuery2 <- function(con,query){
statement <- paste0("CREATE TEMPORARY TABLE `temp` ", query)
dbSendQuery(con, statement)
desc <- dbGetQuery(con, "DESCRIBE `temp`")[,1:2]
dbSendQuery(con, "DROP TABLE `temp`")
# strip row_names if exists because it's an attribute and not real column
# otherweise it causes problems with the row count if the table has a row_names col
if(length(grep(pattern="row_names",x=desc)) != 0){
x <- grep(pattern="row_names",x=desc)
desc <- desc[-x,]
}
# replace length output in brackets that is returned by describe
desc[,2] <- gsub("[^a-z]","",desc[,2])
# building a dictionary
fieldtypes <- c("int",        "tinyint",    "bigint",     "float",      "double",     "date",    "character",    "varchar",   "text")
rclasses <-   c("as.numeric", "as.numeric", "as.numeric", "as.numeric", "as.numeric", "as.Date", "as.character", "as.factor", "as.character")
fieldtype_to_rclass = cbind(fieldtypes,rclasses)
map <- merge(fieldtype_to_rclass,desc,by.x="fieldtypes",by.y="Type")
map$rclasses <- as.character(map$rclasses)
#get data
res <- dbGetQuery(con,query)
i=1
for(i in 1:length(map$rclasses)) {
cvn <- call(map$rclasses[i],res[,map$Field[i]])
res[map$Field[i]] <- eval(cvn)
}
return(res)
}
dbGetQuery2(mydb,query)
query <- paste("INSERT INTO table1 VALUES(",2,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery2(mydb,query)
dbGetQuery2(mydb,"SELECT * FROM table1")
dbGetQuery(mydb, "
select * from information_schema.columns
where table_schema = 'dublinbus'
order by table_name,ordinal_position
")
dbGetQuery(mydb, "DROP TABLE table1")
dbSendQuery(mydb, "
CREATE TABLE Table1 (
TimestampID INT UNSIGNED NOT NULL AUTO_INCREMENT,
Timestamp BIGINT UNSIGNED,
LineID SMALLINT UNSIGNED,
JourneyPatternID VARCHAR(8),
TimeFrame VARCHAR (15),
VehicleJourneyID INT UNSIGNED,
Congestion BOOL,
LonWGS84 NUMERIC(10,8),
LatWGS84 NUMERIC(10,8),
Delay INT,
BlockID INT UNSIGNED,
VehicleID INT UNSIGNED,
StopID INT UNSIGNED,
AtStop BOOL,
PRIMARY KEY (TimestampID)
);
")
dbListTables(mydb)
dbGetQuery(mydb, "
select * from information_schema.columns
where table_schema = 'dublinbus'
order by table_name,ordinal_position
")
query <- paste("INSERT INTO table1 VALUES(",2,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery2(mydb,query)
query <- paste("INSERT INTO table1 VALUES(",2,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
dbGetQuery(mydb,"SELECT * FROM table1")
query
dbGetQuery(mydb,"SELECT * FROM table1;")
head(as.integer(train01$StopID))
head(train01$StopID)
View(train01)
dbGetQuery(mydb,"SELECT * FROM table1;")
head(as.integer(as.character(train01$StopID)))
head(train01$StopID)
train01$StopID <- as.integer(as.character(train01$StopID))
dbGetQuery(mydb, "DROP TABLE table1")
dbSendQuery(mydb, "
CREATE TABLE Table1 (
TimestampID INT UNSIGNED NOT NULL AUTO_INCREMENT,
Timestamp BIGINT UNSIGNED,
LineID SMALLINT UNSIGNED,
JourneyPatternID VARCHAR(8),
TimeFrame VARCHAR (15),
VehicleJourneyID INT UNSIGNED,
Congestion BOOL,
LonWGS84 NUMERIC(10,8),
LatWGS84 NUMERIC(10,8),
Delay INT,
BlockID INT UNSIGNED,
VehicleID INT UNSIGNED,
StopID INT UNSIGNED,
AtStop BOOL,
PRIMARY KEY (TimestampID)
);
")
#Check table exists
dbListTables(mydb)
#check columns look right
dbGetQuery(mydb, "
select * from information_schema.columns
where table_schema = 'dublinbus'
order by table_name,ordinal_position
")
# If there are a lot of columns this could be tedious...
# So we could also use paste to add all the values at once.
query <- paste("INSERT INTO table1 VALUES(",1,",", paste(train01[1,], collapse = ", "), ")")
query
dbGetQuery(mydb,query)
dbGetQuery(mydb,"SELECT * FROM table1;")
temp <-dbGetQuery(mydb,"SELECT * FROM table1;")
temp
temp$TimeFrame
typeof(temp$TimeFrame)
rm(temp)
save.image("C:/Users/King Mac/Google Drive/Coding/DIT/5. Project/Dublin-Bus-Project/data_import_analysis.RData")
rm(list=ls())
library(dplyr)
library(vioplot)
library(RMySQL)
setwd("C:/Users/King Mac/Google Drive/Coding/DIT/5. Project/Dublin-Bus-Project")
#converts the timestamp into a date time POSIXct object
dtConvert <- function(timestamp){
return(as.POSIXct(timestamp/1000000, origin="1970-01-01"))
}
#converts two latitude and longitude co-ordinates into a distance in km.
coordConvert <- function(lat1, long1, lat2, long2){
mypi = 3.14159265358979323846
radius = 6378.137
deg2rad=mypi/180
lat1 = lat1*deg2rad
lat2 = lat2*deg2rad
long1 = long1*deg2rad
long2 = long2*deg2rad
distance=acos(sin(lat1)*sin(lat2)+cos(lat1)*cos(lat2)*cos(long2-long1))*radius
return(distance*1000)
}
cleanIt <- function(raw){
raw[raw=="null"]=NA#replace data "nulls" with NA's
raw$StopID[raw$StopID==0]=NA #replace StopID 0's with NA's.
return(raw)
}
#+++++++++++++++++++++++++++START SCRIPT+++++++++++++++++++++++++++++++++#
mydb = dbConnect(MySQL(), user='root', password='qwort', host='localhost',dbname="dublinbus")
dbGetQuery(mydb,"SELECT COUNT(*) FROM table6;")
temp <- dbGetQuery(mydb,"SELECT Delay FROM table2;")
head(temp)
summary(temp)
vioplot(temp)
vioplot(temp$Delay)
query <- paste("SELECT Delay FROM table",i,";"")
)
;
)
""
query <- paste("SELECT Delay FROM table",i,";"\"")
query <- paste("SELECT Delay FROM table",i,";\"")
for(i in 1:31){
query <- paste("SELECT Delay FROM table",i,";\"")
query
}
query <- paste("SELECT Delay FROM table",i,";","\"")
query
query <- paste("SELECT Delay FROM table",i,";","\"",sep="")
query
query <- paste('SELECT Delay FROM table',i,';','"',sep="")
query
query <- paste('SELECT Delay FROM table',i,';',sep="")
query
for(i in 1:31){
query <- paste('SELECT Delay FROM table',i,';',sep="")
query
}
allDelays <- data.frame(row.names="Delay")
allDelays <- data.frame(row.names=c("Delay"))
for(i in 1:31){
query <- paste('SELECT Delay FROM table',i,';',sep="")
temp <- dbGetQuery(mydb,query)
allDelays <- rbind(allDelays, temp)
}
summary(allDelays)
hist(allDelays)
hist(allDelays$Delay)
vioplot(allDelays$Delay)
rm(temp)
title("Violinplot of All Delays for All Buses over 31 Days")
rm(allDelays)
